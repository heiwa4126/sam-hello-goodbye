AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sam-hello-goodbye

  Sample SAM Template. Single Lambda, many API

Globals:
  Function:
    Timeout: 3

Parameters:
  StageName:
    Type: String
    Default: dev
  # PowerToolsLayer:
  #   Type: String
  #   Default: arn:aws:lambda:ap-northeast-3:017000801446:layer:AWSLambdaPowertoolsPython:11
  #   # for Osaka region.
  #   # see https://aws.amazon.com/jp/builders-flash/202203/lambda-powertools-python-1/?awsf.filter-name=*all

Resources:
  HelloRestApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref StageName
      EndpointConfiguration:
        Type: REGIONAL
        # modelやvalidationをいじってるときはEDGEよりREGIONALがいいみたい
      Models:
        ab:
          type: object
          description: 'something like {"a":1,"b":2}'
          required:
            - 'a'
            - 'b'
          properties:
            a:
              type: number
            b:
              type: number

  # AWSのレイヤーを使うと、ローカルデバッグができない
  PowerToolsLayer:
    Type: AWS::Serverless::LayerVersion
    Metadata:
      BuildMethod: python3.9
    Properties:
      Description: "AWS Lambda Powertools Python"
      ContentUri: layer/LambdaPowertoolsPython
      CompatibleRuntimes:
        - python3.9

  HelloFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: hello_world/
      Handler: app.lambda_handler
      Runtime: python3.9
      Layers:
        - !Ref PowerToolsLayer
      Events:
        Hello:
          Type: Api
          Properties:
            RestApiId: !Ref HelloRestApi
            Path: /hello
            Method: get
        HelloName:
          Type: Api
          Properties:
            RestApiId: !Ref HelloRestApi
            Path: /hello/{name}
            Method: get
        Goodbye:
          Type: Api
          Properties:
            RestApiId: !Ref HelloRestApi
            Path: /goodbye
            Method: get
        AddGET:
          Type: Api
          Properties:
            RestApiId: !Ref HelloRestApi
            Path: /add
            Method: get
            RequestParameters:
              # SAMで手軽にやれるのはここまでぐらい。
              # https://stackoverflow.com/questions/57860631/how-to-add-a-request-validator-in-a-aws-sam-template-for-awsserverlessapi
              - method.request.querystring.a:
                  Required: true
                  # schema: type: number とかはない. method.request.querynumberとかもない
              - method.request.querystring.b:
                  Required: true

        AddPOST:
          Type: Api
          Properties:
            RestApiId: !Ref HelloRestApi
            Path: /add
            Method: post
            RequestModel:
              Model: ab
              Required: true
              ValidateBody: true
              ValidateParameters: false

  # ValidateQueryOnly:
  #   # Validatorは作れるけど(CFnだから)、IDをひっつける方法がない
  #   # OpenAPIで書くしかなさそう...
  #   Type: AWS::ApiGateway::RequestValidator
  #   Properties:
  #     Name: validate query only
  #     RestApiId: !Ref HelloRestApi
  #     ValidateRequestBody: false
  #     ValidateRequestParameters: true

  # ValidateBodyOnly: こっちはデフォルトの `body-only`があるので不要
  #   Type: AWS::ApiGateway::RequestValidator
  #   Properties:
  #     Name: validate body only
  #     RestApiId: !Ref HelloRestApi
  #     ValidateRequestBody: true
  #     ValidateRequestParameters: false

  HelloFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    DependsOn: HelloFunction
    Properties:
      RetentionInDays: 7
      LogGroupName: !Join ["/", ["/aws/lambda", !Ref HelloFunction]]

Outputs:
  url:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${HelloRestApi}.execute-api.${AWS::Region}.amazonaws.com/${StageName}"
  api:
    Description: "API Gateway ID"
    Value: !Ref HelloRestApi
  region:
    Description: "API Region"
    Value: !Ref AWS::Region
  stage:
    Value: !Ref StageName
